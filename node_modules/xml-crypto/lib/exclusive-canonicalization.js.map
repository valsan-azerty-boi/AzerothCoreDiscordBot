{"version":3,"file":"exclusive-canonicalization.js","sourceRoot":"","sources":["../src/exclusive-canonicalization.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\r\n  CanonicalizationOrTransformationAlgorithm,\r\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\r\n  NamespacePrefix,\r\n} from \"./types\";\r\nimport * as utils from \"./utils\";\r\nimport * as isDomNode from \"@xmldom/is-dom-node\";\r\n\r\nfunction isPrefixInScope(prefixesInScope, prefix, namespaceURI) {\r\n  let ret = false;\r\n  prefixesInScope.forEach(function (pf) {\r\n    if (pf.prefix === prefix && pf.namespaceURI === namespaceURI) {\r\n      ret = true;\r\n    }\r\n  });\r\n\r\n  return ret;\r\n}\r\n\r\nexport class ExclusiveCanonicalization implements CanonicalizationOrTransformationAlgorithm {\r\n  protected includeComments = false;\r\n\r\n  constructor() {\r\n    this.includeComments = false;\r\n  }\r\n\r\n  attrCompare(a, b) {\r\n    if (!a.namespaceURI && b.namespaceURI) {\r\n      return -1;\r\n    }\r\n    if (!b.namespaceURI && a.namespaceURI) {\r\n      return 1;\r\n    }\r\n\r\n    const left = a.namespaceURI + a.localName;\r\n    const right = b.namespaceURI + b.localName;\r\n\r\n    if (left === right) {\r\n      return 0;\r\n    } else if (left < right) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  nsCompare(a, b) {\r\n    const attr1 = a.prefix;\r\n    const attr2 = b.prefix;\r\n    if (attr1 === attr2) {\r\n      return 0;\r\n    }\r\n    return attr1.localeCompare(attr2);\r\n  }\r\n\r\n  renderAttrs(node) {\r\n    let i;\r\n    let attr;\r\n    const res: string[] = [];\r\n    const attrListToRender: Attr[] = [];\r\n\r\n    if (isDomNode.isCommentNode(node)) {\r\n      return this.renderComment(node);\r\n    }\r\n\r\n    if (node.attributes) {\r\n      for (i = 0; i < node.attributes.length; ++i) {\r\n        attr = node.attributes[i];\r\n        //ignore namespace definition attributes\r\n        if (attr.name.indexOf(\"xmlns\") === 0) {\r\n          continue;\r\n        }\r\n        attrListToRender.push(attr);\r\n      }\r\n    }\r\n\r\n    attrListToRender.sort(this.attrCompare);\r\n\r\n    for (attr of attrListToRender) {\r\n      res.push(\" \", attr.name, '=\"', utils.encodeSpecialCharactersInAttribute(attr.value), '\"');\r\n    }\r\n\r\n    return res.join(\"\");\r\n  }\r\n\r\n  /**\r\n   * Create the string of all namespace declarations that should appear on this element\r\n   *\r\n   * @param {Node} node. The node we now render\r\n   * @param {Array} prefixesInScope. The prefixes defined on this node\r\n   *                parents which are a part of the output set\r\n   * @param {String} defaultNs. The current default namespace\r\n   * @return {String}\r\n   * @api private\r\n   */\r\n  renderNs(\r\n    node,\r\n    prefixesInScope,\r\n    defaultNs,\r\n    defaultNsForPrefix,\r\n    inclusiveNamespacesPrefixList: string[],\r\n  ) {\r\n    let i;\r\n    let attr;\r\n    const res: string[] = [];\r\n    let newDefaultNs = defaultNs;\r\n    const nsListToRender: NamespacePrefix[] = [];\r\n    const currNs = node.namespaceURI || \"\";\r\n\r\n    //handle the namespaceof the node itself\r\n    if (node.prefix) {\r\n      if (\r\n        !isPrefixInScope(\r\n          prefixesInScope,\r\n          node.prefix,\r\n          node.namespaceURI || defaultNsForPrefix[node.prefix],\r\n        )\r\n      ) {\r\n        nsListToRender.push({\r\n          prefix: node.prefix,\r\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\r\n        });\r\n        prefixesInScope.push({\r\n          prefix: node.prefix,\r\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\r\n        });\r\n      }\r\n    } else if (defaultNs !== currNs) {\r\n      //new default ns\r\n      newDefaultNs = node.namespaceURI;\r\n      res.push(' xmlns=\"', newDefaultNs, '\"');\r\n    }\r\n\r\n    //handle the attributes namespace\r\n    if (node.attributes) {\r\n      for (i = 0; i < node.attributes.length; ++i) {\r\n        attr = node.attributes[i];\r\n\r\n        //handle all prefixed attributes that are included in the prefix list and where\r\n        //the prefix is not defined already\r\n        if (\r\n          attr.prefix &&\r\n          !isPrefixInScope(prefixesInScope, attr.localName, attr.value) &&\r\n          inclusiveNamespacesPrefixList.indexOf(attr.localName) >= 0\r\n        ) {\r\n          nsListToRender.push({ prefix: attr.localName, namespaceURI: attr.value });\r\n          prefixesInScope.push({ prefix: attr.localName, namespaceURI: attr.value });\r\n        }\r\n\r\n        //handle all prefixed attributes that are not xmlns definitions and where\r\n        //the prefix is not defined already\r\n        if (\r\n          attr.prefix &&\r\n          !isPrefixInScope(prefixesInScope, attr.prefix, attr.namespaceURI) &&\r\n          attr.prefix !== \"xmlns\" &&\r\n          attr.prefix !== \"xml\"\r\n        ) {\r\n          nsListToRender.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\r\n          prefixesInScope.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\r\n        }\r\n      }\r\n    }\r\n\r\n    nsListToRender.sort(this.nsCompare);\r\n\r\n    //render namespaces\r\n    for (const p of nsListToRender) {\r\n      res.push(\" xmlns:\", p.prefix, '=\"', p.namespaceURI, '\"');\r\n    }\r\n\r\n    return { rendered: res.join(\"\"), newDefaultNs: newDefaultNs };\r\n  }\r\n\r\n  /**\r\n   * @param node Node\r\n   */\r\n  processInner(\r\n    node,\r\n    prefixesInScope,\r\n    defaultNs,\r\n    defaultNsForPrefix,\r\n    inclusiveNamespacesPrefixList: string[],\r\n  ) {\r\n    if (isDomNode.isCommentNode(node)) {\r\n      return this.renderComment(node);\r\n    }\r\n    if (node.data) {\r\n      return utils.encodeSpecialCharactersInText(node.data);\r\n    }\r\n\r\n    if (isDomNode.isElementNode(node)) {\r\n      let i;\r\n      let pfxCopy;\r\n      const ns = this.renderNs(\r\n        node,\r\n        prefixesInScope,\r\n        defaultNs,\r\n        defaultNsForPrefix,\r\n        inclusiveNamespacesPrefixList,\r\n      );\r\n      const res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node), \">\"];\r\n\r\n      for (i = 0; i < node.childNodes.length; ++i) {\r\n        pfxCopy = prefixesInScope.slice(0);\r\n        res.push(\r\n          this.processInner(\r\n            node.childNodes[i],\r\n            pfxCopy,\r\n            ns.newDefaultNs,\r\n            defaultNsForPrefix,\r\n            inclusiveNamespacesPrefixList,\r\n          ),\r\n        );\r\n      }\r\n\r\n      res.push(\"</\", node.tagName, \">\");\r\n      return res.join(\"\");\r\n    }\r\n\r\n    throw new Error(`Unable to exclusive canonicalize node type: ${node.nodeType}`);\r\n  }\r\n\r\n  // Thanks to deoxxa/xml-c14n for comment renderer\r\n  renderComment(node: Comment) {\r\n    if (!this.includeComments) {\r\n      return \"\";\r\n    }\r\n\r\n    const isOutsideDocument = node.ownerDocument === node.parentNode;\r\n    let isBeforeDocument = false;\r\n    let isAfterDocument = false;\r\n\r\n    if (isOutsideDocument) {\r\n      let nextNode: ChildNode | null = node;\r\n      let previousNode: ChildNode | null = node;\r\n\r\n      while (nextNode != null) {\r\n        if (nextNode === node.ownerDocument.documentElement) {\r\n          isBeforeDocument = true;\r\n          break;\r\n        }\r\n\r\n        nextNode = nextNode.nextSibling;\r\n      }\r\n\r\n      while (previousNode != null) {\r\n        if (previousNode === node.ownerDocument.documentElement) {\r\n          isAfterDocument = true;\r\n          break;\r\n        }\r\n\r\n        previousNode = previousNode.previousSibling;\r\n      }\r\n    }\r\n\r\n    const afterDocument = isAfterDocument ? \"\\n\" : \"\";\r\n    const beforeDocument = isBeforeDocument ? \"\\n\" : \"\";\r\n    const encodedText = utils.encodeSpecialCharactersInText(node.data);\r\n\r\n    return `${afterDocument}<!--${encodedText}-->${beforeDocument}`;\r\n  }\r\n\r\n  /**\r\n   * Perform canonicalization of the given element node\r\n   *\r\n   * @api public\r\n   */\r\n  process(elem: Element, options: CanonicalizationOrTransformationAlgorithmProcessOptions): string {\r\n    options = options || {};\r\n    let inclusiveNamespacesPrefixList = options.inclusiveNamespacesPrefixList || [];\r\n    const defaultNs = options.defaultNs || \"\";\r\n    const defaultNsForPrefix = options.defaultNsForPrefix || {};\r\n    const ancestorNamespaces = options.ancestorNamespaces || [];\r\n\r\n    /**\r\n     * If the inclusiveNamespacesPrefixList has not been explicitly provided then look it up in CanonicalizationMethod/InclusiveNamespaces\r\n     */\r\n    if (!utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\r\n      const CanonicalizationMethod = utils.findChildren(elem, \"CanonicalizationMethod\");\r\n      if (CanonicalizationMethod.length !== 0) {\r\n        const inclusiveNamespaces = utils.findChildren(\r\n          CanonicalizationMethod[0],\r\n          \"InclusiveNamespaces\",\r\n        );\r\n        if (inclusiveNamespaces.length !== 0) {\r\n          inclusiveNamespacesPrefixList = (\r\n            inclusiveNamespaces[0].getAttribute(\"PrefixList\") || \"\"\r\n          ).split(\" \");\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * If you have a PrefixList then use it and the ancestors to add the necessary namespaces\r\n     */\r\n    if (utils.isArrayHasLength(inclusiveNamespacesPrefixList)) {\r\n      inclusiveNamespacesPrefixList.forEach(function (prefix) {\r\n        if (ancestorNamespaces) {\r\n          ancestorNamespaces.forEach(function (ancestorNamespace) {\r\n            if (prefix === ancestorNamespace.prefix) {\r\n              elem.setAttributeNS(\r\n                \"http://www.w3.org/2000/xmlns/\",\r\n                `xmlns:${prefix}`,\r\n                ancestorNamespace.namespaceURI,\r\n              );\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const res = this.processInner(\r\n      elem,\r\n      [],\r\n      defaultNs,\r\n      defaultNsForPrefix,\r\n      inclusiveNamespacesPrefixList,\r\n    );\r\n    return res;\r\n  }\r\n\r\n  getAlgorithmName() {\r\n    return \"http://www.w3.org/2001/10/xml-exc-c14n#\";\r\n  }\r\n}\r\n\r\nexport class ExclusiveCanonicalizationWithComments extends ExclusiveCanonicalization {\r\n  constructor() {\r\n    super();\r\n    this.includeComments = true;\r\n  }\r\n\r\n  getAlgorithmName() {\r\n    return \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\";\r\n  }\r\n}\r\n"]}