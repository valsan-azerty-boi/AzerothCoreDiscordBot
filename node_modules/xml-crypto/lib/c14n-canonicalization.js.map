{"version":3,"file":"c14n-canonicalization.js","sourceRoot":"","sources":["../src/c14n-canonicalization.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\r\n  CanonicalizationOrTransformationAlgorithm,\r\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\r\n  NamespacePrefix,\r\n  RenderedNamespace,\r\n} from \"./types\";\r\nimport * as utils from \"./utils\";\r\nimport * as isDomNode from \"@xmldom/is-dom-node\";\r\n\r\nexport class C14nCanonicalization implements CanonicalizationOrTransformationAlgorithm {\r\n  protected includeComments = false;\r\n\r\n  constructor() {\r\n    this.includeComments = false;\r\n  }\r\n\r\n  attrCompare(a, b) {\r\n    if (!a.namespaceURI && b.namespaceURI) {\r\n      return -1;\r\n    }\r\n    if (!b.namespaceURI && a.namespaceURI) {\r\n      return 1;\r\n    }\r\n\r\n    const left = a.namespaceURI + a.localName;\r\n    const right = b.namespaceURI + b.localName;\r\n\r\n    if (left === right) {\r\n      return 0;\r\n    } else if (left < right) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  nsCompare(a, b) {\r\n    const attr1 = a.prefix;\r\n    const attr2 = b.prefix;\r\n    if (attr1 === attr2) {\r\n      return 0;\r\n    }\r\n    return attr1.localeCompare(attr2);\r\n  }\r\n\r\n  renderAttrs(node) {\r\n    let i;\r\n    let attr;\r\n    const attrListToRender: Attr[] = [];\r\n\r\n    if (isDomNode.isCommentNode(node)) {\r\n      return this.renderComment(node);\r\n    }\r\n\r\n    if (node.attributes) {\r\n      for (i = 0; i < node.attributes.length; ++i) {\r\n        attr = node.attributes[i];\r\n        //ignore namespace definition attributes\r\n        if (attr.name.indexOf(\"xmlns\") === 0) {\r\n          continue;\r\n        }\r\n        attrListToRender.push(attr);\r\n      }\r\n    }\r\n\r\n    attrListToRender.sort(this.attrCompare);\r\n\r\n    const res = attrListToRender.map((attr) => {\r\n      return ` ${attr.name}=\"${utils.encodeSpecialCharactersInAttribute(attr.value)}\"`;\r\n    });\r\n\r\n    return res.join(\"\");\r\n  }\r\n\r\n  /**\r\n   * Create the string of all namespace declarations that should appear on this element\r\n   *\r\n   * @param node The node we now render\r\n   * @param prefixesInScope The prefixes defined on this node parents which are a part of the output set\r\n   * @param defaultNs The current default namespace\r\n   * @param defaultNsForPrefix\r\n   * @param ancestorNamespaces Import ancestor namespaces if it is specified\r\n   * @api private\r\n   */\r\n  renderNs(\r\n    node: Element,\r\n    prefixesInScope: string[],\r\n    defaultNs: string,\r\n    defaultNsForPrefix: string,\r\n    ancestorNamespaces: NamespacePrefix[],\r\n  ): RenderedNamespace {\r\n    let i;\r\n    let attr;\r\n    const res: string[] = [];\r\n    let newDefaultNs = defaultNs;\r\n    const nsListToRender: { prefix: string; namespaceURI: string }[] = [];\r\n    const currNs = node.namespaceURI || \"\";\r\n\r\n    //handle the namespace of the node itself\r\n    if (node.prefix) {\r\n      if (prefixesInScope.indexOf(node.prefix) === -1) {\r\n        nsListToRender.push({\r\n          prefix: node.prefix,\r\n          namespaceURI: node.namespaceURI || defaultNsForPrefix[node.prefix],\r\n        });\r\n        prefixesInScope.push(node.prefix);\r\n      }\r\n    } else if (defaultNs !== currNs) {\r\n      //new default ns\r\n      newDefaultNs = node.namespaceURI || \"\";\r\n      res.push(' xmlns=\"', newDefaultNs, '\"');\r\n    }\r\n\r\n    //handle the attributes namespace\r\n    if (node.attributes) {\r\n      for (i = 0; i < node.attributes.length; ++i) {\r\n        attr = node.attributes[i];\r\n\r\n        //handle all prefixed attributes that are included in the prefix list and where\r\n        //the prefix is not defined already. New prefixes can only be defined by `xmlns:`.\r\n        if (attr.prefix === \"xmlns\" && prefixesInScope.indexOf(attr.localName) === -1) {\r\n          nsListToRender.push({ prefix: attr.localName, namespaceURI: attr.value });\r\n          prefixesInScope.push(attr.localName);\r\n        }\r\n\r\n        //handle all prefixed attributes that are not xmlns definitions and where\r\n        //the prefix is not defined already\r\n        if (\r\n          attr.prefix &&\r\n          prefixesInScope.indexOf(attr.prefix) === -1 &&\r\n          attr.prefix !== \"xmlns\" &&\r\n          attr.prefix !== \"xml\"\r\n        ) {\r\n          nsListToRender.push({ prefix: attr.prefix, namespaceURI: attr.namespaceURI });\r\n          prefixesInScope.push(attr.prefix);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (utils.isArrayHasLength(ancestorNamespaces)) {\r\n      // Remove namespaces which are already present in nsListToRender\r\n      for (const ancestorNamespace of ancestorNamespaces) {\r\n        let alreadyListed = false;\r\n        for (const nsToRender of nsListToRender) {\r\n          if (\r\n            nsToRender.prefix === ancestorNamespace.prefix &&\r\n            nsToRender.namespaceURI === ancestorNamespace.namespaceURI\r\n          ) {\r\n            alreadyListed = true;\r\n          }\r\n        }\r\n\r\n        if (!alreadyListed) {\r\n          nsListToRender.push(ancestorNamespace);\r\n        }\r\n      }\r\n    }\r\n\r\n    nsListToRender.sort(this.nsCompare);\r\n\r\n    //render namespaces\r\n    res.push(\r\n      ...nsListToRender.map((attr) => {\r\n        if (attr.prefix) {\r\n          return ` xmlns:${attr.prefix}=\"${attr.namespaceURI}\"`;\r\n        }\r\n        return ` xmlns=\"${attr.namespaceURI}\"`;\r\n      }),\r\n    );\r\n\r\n    return { rendered: res.join(\"\"), newDefaultNs };\r\n  }\r\n\r\n  /**\r\n   * @param node Node\r\n   */\r\n  processInner(node, prefixesInScope, defaultNs, defaultNsForPrefix, ancestorNamespaces) {\r\n    if (isDomNode.isCommentNode(node)) {\r\n      return this.renderComment(node);\r\n    }\r\n    if (node.data) {\r\n      return utils.encodeSpecialCharactersInText(node.data);\r\n    }\r\n\r\n    if (isDomNode.isElementNode(node)) {\r\n      let i;\r\n      let pfxCopy;\r\n      const ns = this.renderNs(\r\n        node,\r\n        prefixesInScope,\r\n        defaultNs,\r\n        defaultNsForPrefix,\r\n        ancestorNamespaces,\r\n      );\r\n      const res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node), \">\"];\r\n\r\n      for (i = 0; i < node.childNodes.length; ++i) {\r\n        pfxCopy = prefixesInScope.slice(0);\r\n        res.push(\r\n          this.processInner(node.childNodes[i], pfxCopy, ns.newDefaultNs, defaultNsForPrefix, []),\r\n        );\r\n      }\r\n\r\n      res.push(\"</\", node.tagName, \">\");\r\n      return res.join(\"\");\r\n    }\r\n\r\n    throw new Error(`Unable to canonicalize node type: ${node.nodeType}`);\r\n  }\r\n\r\n  // Thanks to deoxxa/xml-c14n for comment renderer\r\n  renderComment(node: Comment) {\r\n    if (!this.includeComments) {\r\n      return \"\";\r\n    }\r\n\r\n    const isOutsideDocument = node.ownerDocument === node.parentNode;\r\n    let isBeforeDocument = false;\r\n    let isAfterDocument = false;\r\n\r\n    if (isOutsideDocument) {\r\n      let nextNode: ChildNode | null = node;\r\n      let previousNode: ChildNode | null = node;\r\n\r\n      while (nextNode !== null) {\r\n        if (nextNode === node.ownerDocument.documentElement) {\r\n          isBeforeDocument = true;\r\n          break;\r\n        }\r\n\r\n        nextNode = nextNode.nextSibling;\r\n      }\r\n\r\n      while (previousNode !== null) {\r\n        if (previousNode === node.ownerDocument.documentElement) {\r\n          isAfterDocument = true;\r\n          break;\r\n        }\r\n\r\n        previousNode = previousNode.previousSibling;\r\n      }\r\n    }\r\n\r\n    const afterDocument = isAfterDocument ? \"\\n\" : \"\";\r\n    const beforeDocument = isBeforeDocument ? \"\\n\" : \"\";\r\n    const encodedText = utils.encodeSpecialCharactersInText(node.data);\r\n\r\n    return `${afterDocument}<!--${encodedText}-->${beforeDocument}`;\r\n  }\r\n\r\n  /**\r\n   * Perform canonicalization of the given node\r\n   *\r\n   * @param node\r\n   * @api public\r\n   */\r\n  process(node: Node, options: CanonicalizationOrTransformationAlgorithmProcessOptions): string {\r\n    options = options || {};\r\n    const defaultNs = options.defaultNs || \"\";\r\n    const defaultNsForPrefix = options.defaultNsForPrefix || {};\r\n    const ancestorNamespaces = options.ancestorNamespaces || [];\r\n\r\n    const prefixesInScope: string[] = [];\r\n    for (let i = 0; i < ancestorNamespaces.length; i++) {\r\n      prefixesInScope.push(ancestorNamespaces[i].prefix);\r\n    }\r\n\r\n    const res = this.processInner(\r\n      node,\r\n      prefixesInScope,\r\n      defaultNs,\r\n      defaultNsForPrefix,\r\n      ancestorNamespaces,\r\n    );\r\n    return res;\r\n  }\r\n\r\n  getAlgorithmName() {\r\n    return \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\";\r\n  }\r\n}\r\n\r\n/**\r\n * Add c14n#WithComments here (very simple subclass)\r\n */\r\nexport class C14nCanonicalizationWithComments extends C14nCanonicalization {\r\n  constructor() {\r\n    super();\r\n    this.includeComments = true;\r\n  }\r\n\r\n  getAlgorithmName() {\r\n    return \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\";\r\n  }\r\n}\r\n"]}