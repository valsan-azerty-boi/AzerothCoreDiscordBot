{"version":3,"file":"enveloped-signature.js","sourceRoot":"","sources":["../src/enveloped-signature.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B,iDAAiD;AAQjD,MAAa,kBAAkB;IAG7B;QAFU,oBAAe,GAAG,KAAK,CAAC;QAGhC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,IAAU,EAAE,OAAgE;QAClF,IAAI,IAAI,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC;YAClC,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAC7B,0FAA0F,EAC1F,IAAI,CACL,CAAC;YACF,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,UAAU,EAAE,CAAC;gBAC5D,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC9C,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;QAC5C,MAAM,sBAAsB,GAAG,KAAK,CAAC,OAAO,CAC1C,6CAA6C,EAC7C,aAAa,CACd,CAAC;QACF,IAAI,SAAS,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC;YACjD,MAAM,0BAA0B,GAAG,sBAAsB,CAAC,IAAI,CAAC;YAE/D,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAC7B,2FAA2F,EAC3F,IAAI,CACL,CAAC;YACF,KAAK,MAAM,aAAa,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;gBACxE,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAClC,6CAA6C,EAC7C,aAAa,CACd,CAAC;gBACF,IAAI,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC;oBACzC,MAAM,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAAC;oBAC/C,IAAI,0BAA0B,KAAK,kBAAkB,EAAE,CAAC;wBACtD,IAAI,aAAa,CAAC,UAAU,EAAE,CAAC;4BAC7B,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;wBACtD,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,gBAAgB;QACd,OAAO,uDAAuD,CAAC;IACjE,CAAC;CACF;AAnDD,gDAmDC","sourcesContent":["import * as xpath from \"xpath\";\r\nimport * as isDomNode from \"@xmldom/is-dom-node\";\r\n\r\nimport type {\r\n  CanonicalizationOrTransformationAlgorithm,\r\n  CanonicalizationOrTransformationAlgorithmProcessOptions,\r\n  CanonicalizationOrTransformAlgorithmType,\r\n} from \"./types\";\r\n\r\nexport class EnvelopedSignature implements CanonicalizationOrTransformationAlgorithm {\r\n  protected includeComments = false;\r\n\r\n  constructor() {\r\n    this.includeComments = false;\r\n  }\r\n\r\n  process(node: Node, options: CanonicalizationOrTransformationAlgorithmProcessOptions): Node {\r\n    if (null == options.signatureNode) {\r\n      const signature = xpath.select1(\r\n        \"./*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",\r\n        node,\r\n      );\r\n      if (isDomNode.isNodeLike(signature) && signature.parentNode) {\r\n        signature.parentNode.removeChild(signature);\r\n      }\r\n      return node;\r\n    }\r\n    const signatureNode = options.signatureNode;\r\n    const expectedSignatureValue = xpath.select1(\r\n      \".//*[local-name(.)='SignatureValue']/text()\",\r\n      signatureNode,\r\n    );\r\n    if (isDomNode.isTextNode(expectedSignatureValue)) {\r\n      const expectedSignatureValueData = expectedSignatureValue.data;\r\n\r\n      const signatures = xpath.select(\r\n        \".//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",\r\n        node,\r\n      );\r\n      for (const nodeSignature of Array.isArray(signatures) ? signatures : []) {\r\n        const signatureValue = xpath.select1(\r\n          \".//*[local-name(.)='SignatureValue']/text()\",\r\n          nodeSignature,\r\n        );\r\n        if (isDomNode.isTextNode(signatureValue)) {\r\n          const signatureValueData = signatureValue.data;\r\n          if (expectedSignatureValueData === signatureValueData) {\r\n            if (nodeSignature.parentNode) {\r\n              nodeSignature.parentNode.removeChild(nodeSignature);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node;\r\n  }\r\n\r\n  getAlgorithmName(): CanonicalizationOrTransformAlgorithmType {\r\n    return \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\";\r\n  }\r\n}\r\n"]}